class Solution {
public:

void dfs(vector<vector<int>>& grid,int i,int j,int& perimeter){
    if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size()||grid[i][j]==0){
        perimeter++;
        return;
    }
    if(grid[i][j]==-1)
    return;
    grid[i][j]=-1;
    dfs(grid,i-1,j,perimeter);
    dfs(grid,i+1,j,perimeter);
    dfs(grid,i,j-1,perimeter);
    dfs(grid,i,j+1,perimeter);
}
    int islandPerimeter(vector<vector<int>>& grid) {
        int  m=grid.size();
        int n=grid[0].size();
        int perimeter=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    dfs(grid,i,j,perimeter);
                   return perimeter;
                }
             
            }
            
        }
            return perimeter;
        
    }
};
