/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
public:
     int peak(MountainArray &arr) {
        int start=0;
        int n=arr.length();
        int end=n-1;
        int res=-1;
        int mid=0;
       while(start<end)
    {
        mid=start + (end-start)/2;
        if(arr.get(mid+1)>arr.get(mid))
         {start=mid+1;
         res=mid+1;}
        else end=mid;
    }
    return res;
    }
    int binarysearch(int start,int end,int target, MountainArray &arr,bool flag)
    {
       
        int mid=0;
      int res=-1;
    while(start<=end)
    {
        int mid = start + (end-start)/2;
        if(target== arr.get(mid))
        {
            res=mid;
            if(flag) 
            start=mid+1;
            else 
            end=mid-1;
        }
        else if(target>arr.get(mid))
        {
            if(flag) 
            end=mid-1;
            else 
            start=mid+1;
        }
        else 
        {
            if(flag) 
            start=mid+1;
            else 
            end=mid-1;
        }
    }
    return res;}

    int findInMountainArray(int target, MountainArray &mountainArr) {
       int n = mountainArr.length();
       if(n<3) 
       return -1;

       int index = peak(mountainArr); 

       
       int l = binarysearch(0,index,target,mountainArr,0);
       if(l!=-1) 
          return l;

       
       int r = binarysearch(index,n-1,target,mountainArr,1);
       return r;
       
 
    }
};
