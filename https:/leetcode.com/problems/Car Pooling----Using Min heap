class Solution {
public:
    static bool compare(vector<int> lhs,vector<int> rhs){
        if(lhs[1]<rhs[1]  || (lhs[1]==rhs[1]  && lhs[2]<rhs[2]))
        return true;
        return false;
    }
    bool carPooling(vector<vector<int>>& trips, int capacity) {
        sort(trips.begin(),trips.end(),compare);
        priority_queue<pair<int,int>, vector<pair<int,int>>,greater<pair<int,int>>>pq;
        int sum=0;
        for(int i=0;i<trips.size();i++)
        {
            while(!pq.empty() && pq.top().first<=trips[i][1])
            {
               sum-=pq.top().second;
               pq.pop();
            }
            pq.push({trips[i][2],trips[i][0]});
            sum+=trips[i][0];
            if(sum>capacity)
            return false;
           
        }
        
    return true;
    }
};
