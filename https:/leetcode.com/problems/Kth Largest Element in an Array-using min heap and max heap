/* min heap*/
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int,vector<int>,greater<int>>min;
        for(int i=0;i<nums.size();i++)
        {
            min.push(nums[i]);
             if(min.size()>k)
             min.pop();
        }
       
        return min.top();
    }
};
/* max heap*/
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int>max_h(nums.begin(),nums.end());
        int ans=0;

        while(k--)
        {
           ans= max_h.top();
            max_h.pop();
        }
          
       
        return ans;
    }
};
